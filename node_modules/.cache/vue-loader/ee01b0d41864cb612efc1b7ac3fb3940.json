{"remainingRequest":"/Users/zhwtest/Desktop/VueProjects/admin_study_ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhwtest/Desktop/VueProjects/admin_study_ui/src/components/user/User.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zhwtest/Desktop/VueProjects/admin_study_ui/src/components/user/User.vue","mtime":1582532299207},{"path":"/Users/zhwtest/Desktop/VueProjects/admin_study_ui/node_modules/cache-loader/dist/cjs.js","mtime":1577353208002},{"path":"/Users/zhwtest/Desktop/VueProjects/admin_study_ui/node_modules/babel-loader/lib/index.js","mtime":1577353208223},{"path":"/Users/zhwtest/Desktop/VueProjects/admin_study_ui/node_modules/cache-loader/dist/cjs.js","mtime":1577353208002},{"path":"/Users/zhwtest/Desktop/VueProjects/admin_study_ui/node_modules/vue-loader/lib/index.js","mtime":1577353211955}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["User.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmfile":"User.vue","sourceRoot":"src/components/user","sourcesContent":["<template>\n  <div>\n    <!-- 面包屑导航区域-->\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\n      <el-breadcrumb-item>用户管理</el-breadcrumb-item>\n      <el-breadcrumb-item>用户列表</el-breadcrumb-item>\n    </el-breadcrumb>\n    <!-- 卡片视图区域-->\n    <el-card>\n      <!-- 搜索与添加区域-->\n      <el-row :gutter=\"30\">\n        <el-col :span=\"5\">\n          <el-input\n            v-model=\"queryInfo.mes\"\n            placeholder=\"姓名/昵称/电话/邮箱\"\n            clearable\n            @clear=\"getUserList\"\n          ></el-input>\n        </el-col>\n        <el-col :span=\"5\">\n          <el-select v-model=\"queryInfo.status\" placeholder=\"状态\">\n            <el-option\n              v-for=\"item in options\"\n              :key=\"item.value\"\n              :label=\"item.label\"\n              :value=\"item.value\"\n            ></el-option>\n          </el-select>\n        </el-col>\n        <el-col :span=\"5\">\n          <el-date-picker\n            v-model=\"queryInfo.timeValue\"\n            type=\"datetimerange\"\n            align=\"right\"\n            start-placeholder=\"创建开始日期\"\n            end-placeholder=\"创建结束日期\"\n            value-format=\"yyyy:MM:dd HH:mm:ss\"\n            :default-time=\"['00:00:00', '24:00:00']\"\n          ></el-date-picker>\n        </el-col>\n      </el-row>\n      <el-row>\n        <el-col :span=\"6\">\n          <el-button type=\"primary\" plain @click=\"getUserList\">搜索</el-button>\n          <el-button plain @click=\"exportData\">导出</el-button>\n          <el-button type=\"primary\" @click=\"addDialogVisible = true\"\n            >添加用户</el-button\n          >\n        </el-col>\n      </el-row>\n      <!-- 用户列表区域-->\n      <el-table border :data=\"userList\">\n        <template v-for=\"(item, index) in tableHead\">\n          <el-table-column\n            v-if=\"item.column_name\"\n            :key=\"index\"\n            :prop=\"item.column_name\"\n            :label=\"item.column_comment\"\n          ></el-table-column>\n        </template>\n        <el-table-column label=\"状态\" width=\"50px\">\n          <template slot-scope=\"scope\">\n            <p v-if=\"scope.row.status === 1\">启用</p>\n            <p v-else-if=\"scope.row.status === 0\">禁用</p>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"操作\" width=\"120px\">\n          <template slot-scope=\"scope\">\n            <!-- 修改按钮 -->\n            <el-button\n              type=\"primary\"\n              icon=\"el-icon-edit\"\n              size=\"mini\"\n              @click=\"showEditDialog(scope.row.id)\"\n            ></el-button>\n            <!-- 删除按钮 -->\n            <el-button\n              type=\"danger\"\n              icon=\"el-icon-delete\"\n              size=\"mini\"\n              @click=\"removeUserById(scope.row.id)\"\n            ></el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n      <!-- 分页-->\n      <el-pagination\n        :current-page=\"queryInfo.pagenum\"\n        :page-sizes=\"[10, 20, 50, 100]\"\n        :page-size=\"queryInfo.pagesize\"\n        layout=\"total, sizes, prev, pager, next, jumper\"\n        :total=\"total\"\n        @size-change=\"handleSizeChange\"\n        @current-change=\"handleCurrentChange\"\n      ></el-pagination>\n    </el-card>\n    <!-- 添加用户对话框-->\n    <el-dialog\n      title=\"添加用户\"\n      :visible.sync=\"addDialogVisible\"\n      width=\"50%\"\n      @close=\"addDialogClosed\"\n    >\n      <!-- 内容主体区域-->\n      <el-form\n        ref=\"addFormRef\"\n        :model=\"createUser\"\n        :rules=\"addRulesForm\"\n        label-width=\"70px\"\n      >\n        <el-form-item label=\"用户名\" prop=\"name\">\n          <el-input v-model=\"createUser.name\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"密码\" prop=\"password\">\n          <el-input v-model=\"createUser.password\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"昵称\" prop=\"nickName\">\n          <el-input v-model=\"createUser.nickName\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"电话\" prop=\"mobile\">\n          <el-input v-model=\"createUser.mobile\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"邮箱\" prop=\"email\">\n          <el-input v-model=\"createUser.email\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"状态\" prop=\"status\">\n          <template>\n            <el-radio v-model=\"createUser.status\" label=\"0\">禁用</el-radio>\n            <el-radio v-model=\"createUser.status\" label=\"1\">启用</el-radio>\n          </template>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"addDialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"addUser\">确 定</el-button>\n      </span>\n    </el-dialog>\n    <!-- 修改用户的对话框-->\n    <el-dialog\n      title=\"修改用戶\"\n      :visible.sync=\"editDialogVisible\"\n      width=\"50%\"\n      @close=\"editDialogClosed\"\n    >\n      <el-form\n        ref=\"editFormRef\"\n        :model=\"editForm\"\n        :rules=\"addRulesForm\"\n        label-width=\"70px\"\n      >\n        <el-form-item label=\"用户名\" prop=\"name\">\n          <el-input v-model=\"editForm.name\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"昵称\" prop=\"nickName\">\n          <el-input v-model=\"editForm.nickName\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"电话\" prop=\"mobile\">\n          <el-input v-model=\"editForm.mobile\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"邮箱\" prop=\"email\">\n          <el-input v-model=\"editForm.email\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"状态\" prop=\"status\">\n          <template>\n            <el-radio v-model=\"editForm.status\" label=\"0\">禁用</el-radio>\n            <el-radio v-model=\"editForm.status\" label=\"1\">启用</el-radio>\n          </template>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"editDialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"editUserInfo\">确 定</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    // 验证邮箱的自定义规则\n    var checkEmail = (rule, value, cb) => {\n      const regEmail = /^[A-Za-z0-9\\u4e00-\\u9fa5]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$/\n      if (regEmail.test(value)) {\n        return cb()\n      }\n      cb(new Error('请输入合法的邮箱！'))\n    }\n    // 验证手机号的自定义规则˝\n    var checkMobile = (rule, value, cb) => {\n      const regMobile = /^1[3456789]\\d{9}$/\n      if (regMobile.test(value)) {\n        return cb()\n      }\n      cb(new Error('请输入正确的手机号！'))\n    }\n    return {\n      // 获取用户列表的参数对象\n      queryInfo: {\n        mes: '',\n        status: '',\n        timeValue: '',\n        pageNum: 1,\n        pageSize: 10\n      },\n      total: 0,\n      tableHead: [\n        { column_name: 'id', column_comment: 'ID' },\n        { column_name: 'name', column_comment: '姓名' },\n        { column_name: 'nickName', column_comment: '昵称' },\n        { column_name: 'mobile', column_comment: '电话' },\n        { column_name: 'email', column_comment: '邮箱' },\n        { column_name: 'createTime', column_comment: '创建时间' },\n        { column_name: 'updateTime', column_comment: '修改时间' },\n        { column_name: 'lastUpdateBy', column_comment: '最后修改人' }\n      ],\n      userList: [],\n      // 控制添加用户对话框的显示隐藏\n      addDialogVisible: false,\n      // 添加用户的表单数据\n      createUser: {\n        name: [],\n        password: [],\n        nickName: [],\n        mobile: [],\n        email: [],\n        status: '0'\n      },\n      // 添加用户表单的校验对象\n      addRulesForm: {\n        name: [{ required: true, message: '请输入用户名', trigger: 'blur' }],\n        password: [{ required: true, message: '请输入密码', trigger: 'blur' }],\n        nickName: [{ required: true, message: '请输入昵称', trigger: 'blur' }],\n        mobile: [\n          { required: true, message: '请输入电话', trigger: 'blur' },\n          { validator: checkMobile, trigger: 'blur' }\n        ],\n        email: [\n          { required: true, message: '请输入邮箱', trigger: 'blur' },\n          { validator: checkEmail, trigger: 'blur' }\n        ],\n        status: [{ required: true, message: '请选择状态', trigger: 'blur' }]\n      },\n      // 控制修改用户对话框的显示与隐藏\n      editDialogVisible: false,\n      editForm: {\n        // 获取当前登录用户。作为修改人\n        lastUpdateBy: []\n      },\n      options: [\n        {\n          value: '0',\n          label: '启用'\n        },\n        {\n          value: '1',\n          label: '禁用'\n        }\n      ]\n    }\n  },\n  created() {\n    this.getUserList()\n  },\n  methods: {\n    async getUserList() {\n      // const { data: userRes } = await this.$http.get('/user/find', {\n      //   params: this.queryInfo\n      // })\n      const { data: userRes } = await this.$api.user.findPage(this.queryInfo)\n      if (userRes.code !== 200) {\n        return this.$message.error('获取用户列表失败！')\n      }\n      this.userList = userRes.data.users\n      this.total = userRes.data.total\n    },\n    // 监听pagesize改变的事件\n    handleSizeChange(newSize) {\n      this.queryInfo.pageSize = newSize\n      this.getUserList()\n    },\n    // 监听 页码值改变的事件\n    handleCurrentChange(newPage) {\n      this.queryInfo.pageNum = newPage\n      this.getUserList()\n    },\n    // 监听添加用户对话框关闭事件\n    addDialogClosed() {\n      this.$refs.addFormRef.resetFields()\n    },\n    // 点击”确认“提交前的预校验\n    addUser() {\n      this.$refs.addFormRef.validate(async valid => {\n        if (!valid) return\n        // 校验通过可以发起添加请求了\n        // const { data: res } = await this.$http.post(\n        //   '/user/create',\n        //   this.createUser\n        // )\n        const { data: res } = await this.$api.user.create(this.createUser)\n        if (res.code !== 200) {\n          this.$message.error('添加用户失败！')\n        }\n        this.$message.success('添加用户成功！')\n        // 添加成功关闭对话框\n        this.addDialogVisible = false\n        // 重新获取列表数据\n        this.getUserList()\n      })\n    },\n    // 展示编辑用户的对话框\n    async showEditDialog(id) {\n      // const { data: res } = await this.$http.get('/user/getuserbyid/' + id)\n      const { data: res } = await this.$api.user.getuserbyid(id)\n      if (res.code !== 200) {\n        return this.$message.error('查询用户信息失败！')\n      }\n\n      this.editForm = res.data\n      this.editDialogVisible = true\n    },\n    editDialogClosed() {\n      this.$refs.editFormRef.resetFields()\n    },\n    // 修改用户信息并提交\n    editUserInfo() {\n      this.editForm.lastUpdateBy = window.sessionStorage.getItem('token')\n      this.$refs.editFormRef.validate(async valid => {\n        if (!valid) return\n        // 发起用户请求\n        // const { data: res } = await this.$http.post(\n        //   '/user/update',\n        //   this.editForm\n        // )\n        const { data: res } = await this.$api.user.update(this.editForm)\n        if (res.code !== 200) {\n          return this.$message.error('修改用户信息失败！')\n        }\n        // 关闭对框\n        this.editDialogVisible = false\n        // 刷新数据\n        this.getUserList()\n        // 提示信息\n        this.$message.success('更新成功！')\n      })\n    },\n    // 根据id删除\n    async removeUserById(id) {\n      // 弹窗询问是否删除\n      const confirmResult = await this.$confirm(\n        '此操作将永久删除该用户, 是否继续?',\n        '提示',\n        {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }\n      ).catch(err => err)\n      if (confirmResult !== 'confirm') {\n        return this.$message.info('已取消删除！')\n      }\n      // const { data: res } = await this.$http.delete('/user/deleteuser/' + id)\n      const { data: res } = await this.$api.user.deleteuser(id)\n      if (res.code !== 200) {\n        return this.$message.error('删除用户信息失败！')\n      }\n      // 提示信息\n      this.$message.success('删除成功！')\n      // 刷新数据\n      this.getUserList()\n    },\n    // 导出数据\n    exportData() {\n      require.ensure([], () => {\n        // 标红是没有驼峰命名\n        // const { export_json_to_excel } = require('@/vendor/Export2Excel')\n        const { exportJsonToExcel } = require('../../vendor/Export2Excel')\n        // 要输出的表头\n        const tHeader = [\n          'id',\n          '姓名',\n          '昵称',\n          '电话',\n          '邮箱',\n          '创建时间',\n          '修改时间',\n          '最后修改人'\n        ]\n        // 表头对应的内容, 会从下行定义的 list 里去找相应的数据\n        const filterVal = [\n          'id',\n          'name',\n          'nickName',\n          'mobile',\n          'email',\n          'createTime',\n          'updateTime',\n          'lastUpdateBy'\n        ]\n        // 数据来源\n        const list = this.userList\n        const data = this.formatJson(filterVal, list)\n        // fileName: 要导出的表格名称\n        exportJsonToExcel(tHeader, data, 'users' + this.time)\n      })\n    },\n    formatJson(filterVal, jsonData) {\n      return jsonData.map(v => filterVal.map(j => v[j]))\n    }\n  }\n}\n</script>\n\n<style lang=\"less\" scoped></style>\n"]}]}