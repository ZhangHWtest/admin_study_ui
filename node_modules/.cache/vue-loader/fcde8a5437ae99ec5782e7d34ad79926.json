{"remainingRequest":"/Users/zhwtest/Desktop/VueProjects/admin_study_ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhwtest/Desktop/VueProjects/admin_study_ui/src/components/user/ExportExcelCommon.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zhwtest/Desktop/VueProjects/admin_study_ui/src/components/user/ExportExcelCommon.vue","mtime":1582358794828},{"path":"/Users/zhwtest/Desktop/VueProjects/admin_study_ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhwtest/Desktop/VueProjects/admin_study_ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zhwtest/Desktop/VueProjects/admin_study_ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhwtest/Desktop/VueProjects/admin_study_ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBGaWxlU2F2ZXIgZnJvbSAnZmlsZS1zYXZlcicKaW1wb3J0IFhMU1ggZnJvbSAneGxzeCcKZXhwb3J0IGRlZmF1bHQgewogIHByb3BzOiB7CiAgICBleHBvcnRFeGNlbEluZm86IHsKICAgICAgdHlwZTogT2JqZWN0LAogICAgICBkZWZhdWx0OiBbXQogICAgfSwKICAgIGV4cG9ydEV4Y2VsQXJyeTogewogICAgICB0eXBlOiBBcnJheSwKICAgICAgZGVmYXVsdDogW10KICAgIH0sCiAgICB0YWJsZURhdGE6IHsKICAgICAgdHlwZTogQXJyYXksCiAgICAgIGRlZmF1bHQ6IFtdCiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICAvLyBleGNlbOWvvOWHugogICAgZXhwb3J0RXhjZWwoKSB7CiAgICAgIHZhciB4bHN4UGFyYW0gPSB7IHJhdzogdHJ1ZSB9IC8vIOWvvOWHuueahOWGheWuueWPquWBmuino+aekO+8jOS4jei/m+ihjOagvOW8j+i9rOaNogogICAgICB2YXIgd2IgPSBYTFNYLnV0aWxzLnRhYmxlX3RvX2Jvb2soCiAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignIycgKyB0aGlzLmV4cG9ydEV4Y2VsSW5mby5leGNlbElkKSwKICAgICAgICB4bHN4UGFyYW0KICAgICAgKQogICAgICB2YXIgd2JvdXQgPSBYTFNYLndyaXRlKHdiLCB7CiAgICAgICAgYm9va1R5cGU6ICd4bHN4JywKICAgICAgICBib29rU1NUOiB0cnVlLAogICAgICAgIHR5cGU6ICdhcnJheScKICAgICAgfSkKICAgICAgdHJ5IHsKICAgICAgICBGaWxlU2F2ZXIuc2F2ZUFzKAogICAgICAgICAgbmV3IEJsb2IoW3dib3V0XSwgeyB0eXBlOiAnYXBwbGljYXRpb24vb2N0ZXQtc3RyZWFtJyB9KSwKICAgICAgICAgIHRoaXMuZXhwb3J0RXhjZWxJbmZvLmV4Y2VsTmFtZQogICAgICAgICkKICAgICAgfSBjYXRjaCAoZSkgewogICAgICAgIGlmICh0eXBlb2YgY29uc29sZSAhPT0gJ3VuZGVmaW5lZCcpIGNvbnNvbGUubG9nKGUsIHdib3V0KQogICAgICB9CiAgICAgIHJldHVybiB3Ym91dAogICAgfSwKICAgIC8vIOihqOagvGZvcm1hdHRlcuaVsOaNruagvOW8j+WMlgogICAgZm9ybWF0dGVyKHZhbHVlLCBpdGVtLCByb3csIHByb3ApIHsKICAgICAgLy8g6ZKI5a+5dGFibGXkuK1pdGVt5aSa5bGC5a+56LGh5bGC57qn55qE5oOF5Ya1CiAgICAgIGlmIChwcm9wLmluZGV4T2YoJy4nKSA+IDApIHsKICAgICAgICBsZXQgdGVtcCA9IHByb3Auc3BsaXQoJy4nKQogICAgICAgIC8vIGl0ZW3kuK3ltYzlpZfkuKTlsYIKICAgICAgICBpZiAodGVtcC5sZW5ndGggPT09IDIpIHsKICAgICAgICAgIGxldCB0ZW1wID0gcHJvcC5zcGxpdCgnLicpCiAgICAgICAgICBpZiAoaXRlbS5mb3JtYXR0ZXJUeXBlID09PSAnY29tbW9uLXR5cGUnKSB7CiAgICAgICAgICAgIC8vIOmAmueUqOexu+Wei+i9rOaNogogICAgICAgICAgICBsZXQgYXJyeSA9IGl0ZW0uZm9ybWF0dGVySW5mbwogICAgICAgICAgICBmb3IgKGxldCBpIGluIGFycnkpIHsKICAgICAgICAgICAgICBpZiAoYXJyeVtpXS52YWx1ZSA9PT0gcm93W3RlbXBbMF1dW3RlbXBbMV1dKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gYXJyeVtpXS5sYWJlbAogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfSBlbHNlIGlmIChpdGVtLmZvcm1hdHRlclR5cGUgPT09ICd0aW1lLXR5cGUnKSB7CiAgICAgICAgICAgIC8vIOaXtumXtOagh+WHhuagvOW8j+WMlgogICAgICAgICAgICBpZiAoIWdsb2JhbC5pc051bGwocm93W3RlbXBbMF1dW3RlbXBbMV1dKSkgewogICAgICAgICAgICAgIHJldHVybiByb3dbdGVtcFswXV1bdGVtcFsxXV0uc3Vic3RyaW5nKAogICAgICAgICAgICAgICAgMCwKICAgICAgICAgICAgICAgIHJvd1t0ZW1wWzBdXVt0ZW1wWzFdXS5sZW5ndGggLSAyCiAgICAgICAgICAgICAgKQogICAgICAgICAgICB9CiAgICAgICAgICB9IGVsc2UgaWYgKGl0ZW0uZm9ybWF0dGVyVHlwZSA9PT0gJ2Ftb3VudC10eXBlJykgewogICAgICAgICAgICAvLyDph5Hpop3ovazmjaIKICAgICAgICAgICAgcmV0dXJuIChyb3dbdGVtcFswXV1bdGVtcFsxXV0gLyAxMDApLnRvRml4ZWQoMikKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0gZWxzZSB7CiAgICAgICAgLy8gaXRlbeS4reaXoOW1jOWll+WvueixoQogICAgICAgIGxldCB0ZW1wID0gcHJvcC5zcGxpdCgnLicpCiAgICAgICAgaWYgKGl0ZW0uZm9ybWF0dGVyVHlwZSA9PT0gJ2NvbW1vbi10eXBlJykgewogICAgICAgICAgLy8g6YCa55So57G75Z6L6L2s5o2iCiAgICAgICAgICBsZXQgYXJyeSA9IGl0ZW0uZm9ybWF0dGVySW5mbwogICAgICAgICAgZm9yIChsZXQgaSBpbiBhcnJ5KSB7CiAgICAgICAgICAgIGlmIChhcnJ5W2ldLnZhbHVlID09PSB2YWx1ZSkgewogICAgICAgICAgICAgIHJldHVybiBhcnJ5W2ldLmxhYmVsCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9IGVsc2UgaWYgKGl0ZW0uZm9ybWF0dGVyVHlwZSA9PT0gJ3RpbWUtdHlwZScpIHsKICAgICAgICAgIC8vIOaXtumXtOagh+WHhuagvOW8j+WMlgogICAgICAgICAgaWYgKCFnbG9iYWwuaXNOdWxsKHJvd1t0ZW1wWzBdXVt0ZW1wWzFdXSkpIHsKICAgICAgICAgICAgcmV0dXJuIHZhbHVlLnN1YnN0cmluZygwLCB2YWx1ZS5sZW5ndGggLSAyKQogICAgICAgICAgfQogICAgICAgIH0gZWxzZSBpZiAoaXRlbS5mb3JtYXR0ZXJUeXBlID09PSAnYW1vdW50LXR5cGUnKSB7CiAgICAgICAgICAvLyDph5Hpop3ovazmjaIKICAgICAgICAgIHJldHVybiAodmFsdWUgLyAxMDApLnRvRml4ZWQoMikKICAgICAgICB9CiAgICAgIH0KICAgIH0KICB9Cn0K"},{"version":3,"sources":["ExportExcelCommon.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ExportExcelCommon.vue","sourceRoot":"src/components/user","sourcesContent":["<template>\n  <transition name=\"fadeIn\">\n    <div v-show=\"false\">\n      <el-table\n        :id=\"exportExcelInfo.excelId\"\n        :data=\"tableData\"\n        highlight-current-row\n        style=\"width: 100%\"\n      >\n        <template v-for=\"(item,index) in exportExcelArry\">\n          <el-table-column v-if=\"!item.formatterFlag\" :prop=\"item.prop\" :label=\"item.label\"></el-table-column>\n          <el-table-column v-else :prop=\"item.prop\" :label=\"item.label\">\n            <template slot-scope=\"scope\">\n              <span>{{formatter(scope.row[item.prop],item,scope.row,item.prop)}}</span>\n            </template>\n          </el-table-column>\n        </template>\n      </el-table>\n    </div>\n  </transition>\n</template>\n<script>\nimport FileSaver from 'file-saver'\nimport XLSX from 'xlsx'\nexport default {\n  props: {\n    exportExcelInfo: {\n      type: Object,\n      default: []\n    },\n    exportExcelArry: {\n      type: Array,\n      default: []\n    },\n    tableData: {\n      type: Array,\n      default: []\n    }\n  },\n  methods: {\n    // excel导出\n    exportExcel() {\n      var xlsxParam = { raw: true } // 导出的内容只做解析，不进行格式转换\n      var wb = XLSX.utils.table_to_book(\n        document.querySelector('#' + this.exportExcelInfo.excelId),\n        xlsxParam\n      )\n      var wbout = XLSX.write(wb, {\n        bookType: 'xlsx',\n        bookSST: true,\n        type: 'array'\n      })\n      try {\n        FileSaver.saveAs(\n          new Blob([wbout], { type: 'application/octet-stream' }),\n          this.exportExcelInfo.excelName\n        )\n      } catch (e) {\n        if (typeof console !== 'undefined') console.log(e, wbout)\n      }\n      return wbout\n    },\n    // 表格formatter数据格式化\n    formatter(value, item, row, prop) {\n      // 针对table中item多层对象层级的情况\n      if (prop.indexOf('.') > 0) {\n        let temp = prop.split('.')\n        // item中嵌套两层\n        if (temp.length === 2) {\n          let temp = prop.split('.')\n          if (item.formatterType === 'common-type') {\n            // 通用类型转换\n            let arry = item.formatterInfo\n            for (let i in arry) {\n              if (arry[i].value === row[temp[0]][temp[1]]) {\n                return arry[i].label\n              }\n            }\n          } else if (item.formatterType === 'time-type') {\n            // 时间标准格式化\n            if (!global.isNull(row[temp[0]][temp[1]])) {\n              return row[temp[0]][temp[1]].substring(\n                0,\n                row[temp[0]][temp[1]].length - 2\n              )\n            }\n          } else if (item.formatterType === 'amount-type') {\n            // 金额转换\n            return (row[temp[0]][temp[1]] / 100).toFixed(2)\n          }\n        }\n      } else {\n        // item中无嵌套对象\n        let temp = prop.split('.')\n        if (item.formatterType === 'common-type') {\n          // 通用类型转换\n          let arry = item.formatterInfo\n          for (let i in arry) {\n            if (arry[i].value === value) {\n              return arry[i].label\n            }\n          }\n        } else if (item.formatterType === 'time-type') {\n          // 时间标准格式化\n          if (!global.isNull(row[temp[0]][temp[1]])) {\n            return value.substring(0, value.length - 2)\n          }\n        } else if (item.formatterType === 'amount-type') {\n          // 金额转换\n          return (value / 100).toFixed(2)\n        }\n      }\n    }\n  }\n}\n</script>\n"]}]}