{"remainingRequest":"/Users/zhwtest/Desktop/VueProjects/admin_study_ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhwtest/Desktop/VueProjects/admin_study_ui/src/components/courseinfo/YesterdayList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zhwtest/Desktop/VueProjects/admin_study_ui/src/components/courseinfo/YesterdayList.vue","mtime":1582700418780},{"path":"/Users/zhwtest/Desktop/VueProjects/admin_study_ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhwtest/Desktop/VueProjects/admin_study_ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zhwtest/Desktop/VueProjects/admin_study_ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhwtest/Desktop/VueProjects/admin_study_ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZmluZFllc3RlckRheUJvZHk6IHsKICAgICAgICBtZXM6ICcnLAogICAgICAgIHN0YXR1czogJycsCiAgICAgICAgcGFnZU51bTogMSwKICAgICAgICBwYWdlU2l6ZTogMTAKICAgICAgfSwKICAgICAgdG90YWw6IDAsCiAgICAgIHRhYmxlSGVhZDogWwogICAgICAgIHsgY29sdW1uX25hbWU6ICdjb3Vyc2VfbmFtZScsIGNvbHVtbl9jb21tZW50OiAn6K++56iL5ZCN56ewJyB9LAogICAgICAgIHsgY29sdW1uX25hbWU6ICdjb250ZW50X3RpdGxlJywgY29sdW1uX2NvbW1lbnQ6ICfnm7Tmkq3lkI3np7AnIH0sCiAgICAgICAgeyBjb2x1bW5fbmFtZTogJ3N0YXJ0X3RpbWUnLCBjb2x1bW5fY29tbWVudDogJ+W8gOivvuaXtumXtCcgfSwKICAgICAgICB7IGNvbHVtbl9uYW1lOiAnc2Nob29sX25hbWUnLCBjb2x1bW5fY29tbWVudDogJ+WtpumZoicgfSwKICAgICAgICB7IGNvbHVtbl9uYW1lOiAnc3R1ZGVudF9udW1iZXInLCBjb2x1bW5fY29tbWVudDogJ+aKpeWQjeS6uuaVsCcgfSwKICAgICAgICB7IGNvbHVtbl9uYW1lOiAncmVhbF9udW1iZXInLCBjb2x1bW5fY29tbWVudDogJ+S4iuivvuS6uuaVsCcgfSwKICAgICAgICB7IGNvbHVtbl9uYW1lOiAnY2xhc3NfcmF0ZScsIGNvbHVtbl9jb21tZW50OiAn5Yiw6K++546HJyB9CiAgICAgIF0sCiAgICAgIHllc3RlckRheUxpc3Q6IFtdCiAgICB9CiAgfSwKICAvLyDnlJ/lkb3lkajmnJ/lh73mlbDvvIzov5vpobXpnaLliqDovb0KICBjcmVhdGVkKCkgewogICAgdGhpcy5nZXRZZXN0ZXJEYXlMaXN0KCkKICB9LAogIG1ldGhvZHM6IHsKICAgIGFzeW5jIGdldFllc3RlckRheUxpc3QoKSB7CiAgICAgIGNvbnN0IHsgZGF0YTogdXNlclJlcyB9ID0gYXdhaXQgdGhpcy4kYXBpLmNvdXJzZS5maW5kWWVzdGVyRGF5TGlzdCgKICAgICAgICB0aGlzLmZpbmRZZXN0ZXJEYXlCb2R5CiAgICAgICkKICAgICAgaWYgKHVzZXJSZXMuY29kZSAhPT0gMSkgewogICAgICAgIHJldHVybiB0aGlzLiRtZXNzYWdlLmVycm9yKCfojrflj5bnlKjmiLfliJfooajlpLHotKXvvIEnKQogICAgICB9CiAgICAgIHRoaXMueWVzdGVyRGF5TGlzdCA9IHVzZXJSZXMuZGF0YQogICAgfSwKICAgIC8vIOWvvOWHuuaVsOaNrgogICAgZXhwb3J0RGF0YSgpIHsKICAgICAgcmVxdWlyZS5lbnN1cmUoW10sICgpID0+IHsKICAgICAgICAvLyDmoIfnuqLmmK/msqHmnInpqbzls7Dlkb3lkI0KICAgICAgICAvLyBjb25zdCB7IGV4cG9ydF9qc29uX3RvX2V4Y2VsIH0gPSByZXF1aXJlKCdAL3ZlbmRvci9FeHBvcnQyRXhjZWwnKQogICAgICAgIGNvbnN0IHsgZXhwb3J0SnNvblRvRXhjZWwgfSA9IHJlcXVpcmUoJy4uLy4uL3ZlbmRvci9FeHBvcnQyRXhjZWwnKQogICAgICAgIC8vIOimgei+k+WHuueahOihqOWktAogICAgICAgIGNvbnN0IHRIZWFkZXIgPSBbCiAgICAgICAgICAn6K++56iL5ZCN56ewJywKICAgICAgICAgICfnm7Tmkq3lkI3np7AnLAogICAgICAgICAgJ+W8gOivvuaXtumXtCcsCiAgICAgICAgICAn5a2m6ZmiJywKICAgICAgICAgICfmiqXlkI3kurrmlbAnLAogICAgICAgICAgJ+S4iuivvuS6uuaVsCcsCiAgICAgICAgICAn5Yiw6K++546HJwogICAgICAgIF0KICAgICAgICAvLyDooajlpLTlr7nlupTnmoTlhoXlrrksIOS8muS7juS4i+ihjOWumuS5ieeahCBsaXN0IOmHjOWOu+aJvuebuOW6lOeahOaVsOaNrgogICAgICAgIGNvbnN0IGZpbHRlclZhbCA9IFsKICAgICAgICAgICdjb3Vyc2VfbmFtZScsCiAgICAgICAgICAnY29udGVudF90aXRsZScsCiAgICAgICAgICAnc3RhcnRfdGltZScsCiAgICAgICAgICAnc2Nob29sX25hbWUnLAogICAgICAgICAgJ3N0dWRlbnRfbnVtYmVyJywKICAgICAgICAgICdyZWFsX251bWJlcicsCiAgICAgICAgICAnY2xhc3NfcmF0ZScKICAgICAgICBdCiAgICAgICAgLy8g5pWw5o2u5p2l5rqQCiAgICAgICAgY29uc3QgbGlzdCA9IHRoaXMueWVzdGVyRGF5TGlzdAogICAgICAgIGNvbnN0IGRhdGEgPSB0aGlzLmZvcm1hdEpzb24oZmlsdGVyVmFsLCBsaXN0KQogICAgICAgIGNvbnN0IHRpbWUgPSB0aGlzLiRtb21lbnQobmV3IERhdGUoKSkuZm9ybWF0KCdZWVlZLU1NLUREJykKICAgICAgICAvLyBmaWxlTmFtZTog6KaB5a+85Ye655qE6KGo5qC85ZCN56ewCiAgICAgICAgZXhwb3J0SnNvblRvRXhjZWwodEhlYWRlciwgZGF0YSwgJ+aYqOaXpeivvueoiycgKyB0aW1lKQogICAgICB9KQogICAgfSwKICAgIGZvcm1hdEpzb24oZmlsdGVyVmFsLCBqc29uRGF0YSkgewogICAgICByZXR1cm4ganNvbkRhdGEubWFwKHYgPT4gZmlsdGVyVmFsLm1hcChqID0+IHZbal0pKQogICAgfQogIH0KfQo="},{"version":3,"sources":["YesterdayList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"YesterdayList.vue","sourceRoot":"src/components/courseinfo","sourcesContent":["<template>\n  <div>\n    <!-- 面包屑导航区域-->\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\n      <el-breadcrumb-item>课程信息</el-breadcrumb-item>\n      <el-breadcrumb-item>昨日课程</el-breadcrumb-item>\n    </el-breadcrumb>\n    <!-- 卡片视图区域-->\n    <el-card>\n      <!-- 搜索与添加区域-->\n      <el-row>\n        <el-col :span=\"6\">\n          <!-- <el-button type=\"primary\" plain @click=\"getStudentList\"\n            >搜索</el-button\n          > -->\n          <el-button type=\"primary\" @click=\"exportData\">导出</el-button>\n          <!-- <el-button type=\"primary\" @click=\"addDialogVisible = true\"\n            >添加用户</el-button\n          > -->\n        </el-col>\n      </el-row>\n      <!-- 课程列表区域-->\n      <el-table border :data=\"yesterDayList\">\n        <el-table-column type=\"index\" width=\"50\" label=\"序号\"></el-table-column>\n        <template v-for=\"(item, index) in tableHead\">\n          <el-table-column\n            v-if=\"item.column_name\"\n            :key=\"index\"\n            :prop=\"item.column_name\"\n            :label=\"item.column_comment\"\n          ></el-table-column>\n        </template>\n      </el-table>\n      <!-- 分页-->\n      <el-pagination\n        :current-page=\"yesterDayList.page_num\"\n        :page-sizes=\"[10, 20, 50, 100]\"\n        :page-size=\"yesterDayList.page_size\"\n        layout=\"sizes, prev, pager, next, jumper\"\n        :total=\"total\"\n        @size-change=\"handleSizeChange\"\n        @current-change=\"handleCurrentChange\"\n      ></el-pagination>\n    </el-card>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      findYesterDayBody: {\n        mes: '',\n        status: '',\n        pageNum: 1,\n        pageSize: 10\n      },\n      total: 0,\n      tableHead: [\n        { column_name: 'course_name', column_comment: '课程名称' },\n        { column_name: 'content_title', column_comment: '直播名称' },\n        { column_name: 'start_time', column_comment: '开课时间' },\n        { column_name: 'school_name', column_comment: '学院' },\n        { column_name: 'student_number', column_comment: '报名人数' },\n        { column_name: 'real_number', column_comment: '上课人数' },\n        { column_name: 'class_rate', column_comment: '到课率' }\n      ],\n      yesterDayList: []\n    }\n  },\n  // 生命周期函数，进页面加载\n  created() {\n    this.getYesterDayList()\n  },\n  methods: {\n    async getYesterDayList() {\n      const { data: userRes } = await this.$api.course.findYesterDayList(\n        this.findYesterDayBody\n      )\n      if (userRes.code !== 1) {\n        return this.$message.error('获取用户列表失败！')\n      }\n      this.yesterDayList = userRes.data\n    },\n    // 导出数据\n    exportData() {\n      require.ensure([], () => {\n        // 标红是没有驼峰命名\n        // const { export_json_to_excel } = require('@/vendor/Export2Excel')\n        const { exportJsonToExcel } = require('../../vendor/Export2Excel')\n        // 要输出的表头\n        const tHeader = [\n          '课程名称',\n          '直播名称',\n          '开课时间',\n          '学院',\n          '报名人数',\n          '上课人数',\n          '到课率'\n        ]\n        // 表头对应的内容, 会从下行定义的 list 里去找相应的数据\n        const filterVal = [\n          'course_name',\n          'content_title',\n          'start_time',\n          'school_name',\n          'student_number',\n          'real_number',\n          'class_rate'\n        ]\n        // 数据来源\n        const list = this.yesterDayList\n        const data = this.formatJson(filterVal, list)\n        const time = this.$moment(new Date()).format('YYYY-MM-DD')\n        // fileName: 要导出的表格名称\n        exportJsonToExcel(tHeader, data, '昨日课程' + time)\n      })\n    },\n    formatJson(filterVal, jsonData) {\n      return jsonData.map(v => filterVal.map(j => v[j]))\n    }\n  }\n}\n</script>\n\n<style lang=\"less\" scoped></style>\n"]}]}