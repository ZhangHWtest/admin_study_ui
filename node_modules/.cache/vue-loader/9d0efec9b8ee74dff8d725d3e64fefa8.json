{"remainingRequest":"/Users/zhwtest/Desktop/VueProjects/admin_study_ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhwtest/Desktop/VueProjects/admin_study_ui/src/components/Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zhwtest/Desktop/VueProjects/admin_study_ui/src/components/Login.vue","mtime":1579056810577},{"path":"/Users/zhwtest/Desktop/VueProjects/admin_study_ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhwtest/Desktop/VueProjects/admin_study_ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zhwtest/Desktop/VueProjects/admin_study_ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhwtest/Desktop/VueProjects/admin_study_ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgbG9naW5Gb3JtOiB7CiAgICAgICAgbmFtZTogJ2FkbWluJywKICAgICAgICBwYXNzd29yZDogJzExMTExMScKICAgICAgfSwKICAgICAgbG9naW5Gb3JtUnVsZXM6IHsKICAgICAgICBuYW1lOiBbCiAgICAgICAgICB7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAn6K+36L6T5YWl55So5oi35ZCNJywgdHJpZ2dlcjogJ2JsdXInIH0KICAgICAgICBdLAogICAgICAgIHBhc3N3b3JkOiBbeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogJ+ivt+i+k+WFpeWvhueggScsIHRyaWdnZXI6ICdibHVyJyB9XQogICAgICB9CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICByZXNldExvZ2luRm9ybSgpIHsKICAgICAgLy8gY29uc29sZS5sb2codGhpcykKICAgICAgdGhpcy4kcmVmcy5sb2dpbkZvcm1SZWYucmVzZXRGaWVsZHMoKQogICAgfSwKICAgIGxvZ2luKCkgewogICAgICB0aGlzLiRyZWZzLmxvZ2luRm9ybVJlZi52YWxpZGF0ZShhc3luYyB2YWxpZCA9PiB7CiAgICAgICAgLy8gY29uc29sZS5sb2codmFsaWQpCiAgICAgICAgaWYgKCF2YWxpZCk7CiAgICAgICAgY29uc3QgeyBkYXRhOiByZXMgfSA9IGF3YWl0IHRoaXMuJGh0dHAucG9zdCgKICAgICAgICAgICcvdXNlci9sb2dpbicsCiAgICAgICAgICB0aGlzLmxvZ2luRm9ybQogICAgICAgICkKICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgY3VybHkKICAgICAgICBpZiAocmVzLmNvZGUgIT09IDIwMCkKICAgICAgICAgIHJldHVybiB0aGlzLiRtZXNzYWdlLmVycm9yKCfnmbvlvZXlpLHotKXvvIHor7fmo4Dmn6XotKblj7fkv6Hmga/vvIEnKQogICAgICAgIHdpbmRvdy5zZXNzaW9uU3RvcmFnZS5zZXRJdGVtKCd0b2tlbicsIHJlcy5kYXRhLm5hbWUpCiAgICAgICAgdGhpcy4kcm91dGVyLnB1c2goJy9ob21lJykKICAgICAgfSkKICAgIH0KICB9Cn0K"},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"login_container\">\n    <div class=\"login_box\">\n      <!-- 头像区域 -->\n      <div class=\"avatar_box\">\n        <img src=\"../assets/logo.png\" alt />\n      </div>\n      <!-- 登录表单区域 -->\n      <el-form :model=\"loginForm\" class=\"login_form\" :rules=\"loginFormRules\" ref=\"loginFormRef\">\n        <!-- 用户名 -->\n        <el-form-item prop=\"name\">\n          <el-input v-model=\"loginForm.name\" prefix-icon=\"el-icon-user\"></el-input>\n        </el-form-item>\n        <!-- 密码 -->\n        <el-form-item prop=\"password\">\n          <el-input v-model=\"loginForm.password\" prefix-icon=\"el-icon-lock\" type=\"password\"></el-input>\n        </el-form-item>\n        <!-- 按钮 -->\n        <el-form-item class=\"btns\">\n          <el-button type=\"primary\" @click=\"login\">登录</el-button>\n          <el-button type=\"info\" @click=\"resetLoginForm\">重置</el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      loginForm: {\n        name: 'admin',\n        password: '111111'\n      },\n      loginFormRules: {\n        name: [\n          { required: true, message: '请输入用户名', trigger: 'blur' }\n        ],\n        password: [{ required: true, message: '请输入密码', trigger: 'blur' }]\n      }\n    }\n  },\n  methods: {\n    resetLoginForm() {\n      // console.log(this)\n      this.$refs.loginFormRef.resetFields()\n    },\n    login() {\n      this.$refs.loginFormRef.validate(async valid => {\n        // console.log(valid)\n        if (!valid);\n        const { data: res } = await this.$http.post(\n          '/user/login',\n          this.loginForm\n        )\n        // eslint-disable-next-line curly\n        if (res.code !== 200)\n          return this.$message.error('登录失败！请检查账号信息！')\n        window.sessionStorage.setItem('token', res.data.name)\n        this.$router.push('/home')\n      })\n    }\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n.login_container {\n  background-color: #2b4b6b;\n  height: 100%;\n}\n.login_box {\n  width: 450px;\n  height: 300px;\n  background-color: #fff;\n  border-radius: 3px;\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  .avatar_box {\n    width: 130px;\n    height: 130px;\n    border: 1px solid #eee;\n    border-radius: 50%;\n    padding: 10px;\n    box-shadow: 0 0 10px #ddd;\n    position: absolute;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    background-color: #fff;\n    img {\n      width: 100%;\n      height: 100%;\n      border-radius: 50%;\n      background-color: #eee;\n    }\n  }\n}\n\n.login_form {\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  padding: 0 20px;\n  box-sizing: border-box;\n}\n\n.btns {\n  display: flex;\n  justify-content: flex-end;\n}\n</style>\n"]}]}