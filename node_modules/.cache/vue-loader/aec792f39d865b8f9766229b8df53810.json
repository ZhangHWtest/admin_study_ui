{"remainingRequest":"/Users/zhwtest/Desktop/VueProjects/admin_study_ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhwtest/Desktop/VueProjects/admin_study_ui/src/components/user/User.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zhwtest/Desktop/VueProjects/admin_study_ui/src/components/user/User.vue","mtime":1579077673939},{"path":"/Users/zhwtest/Desktop/VueProjects/admin_study_ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhwtest/Desktop/VueProjects/admin_study_ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zhwtest/Desktop/VueProjects/admin_study_ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhwtest/Desktop/VueProjects/admin_study_ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgLy8g6I635Y+W55So5oi35YiX6KGo55qE5Y+C5pWw5a+56LGhCiAgICAgIHF1ZXJ5SW5mbzogewogICAgICAgIHF1ZXJ5OiAnJywKICAgICAgICBwYWdlbnVtOiAxLAogICAgICAgIHBhZ2VzaXplOiAyCiAgICAgIH0sCiAgICAgIHVzZXJMaXN0OiBbXSwKICAgICAgdG90YWw6IDAKICAgIH0KICB9LAogIGNlcmF0ZWQoKSB7CiAgICB0aGlzLmdldFVzZXJMaXN0KCkKICB9LAogIG1ldGhvZHM6IHsKICAgIGFzeW5jIGdldFVzZXJMaXN0KCkgewogICAgICBjb25zdCB7IGRhdGE6IHJlcyB9ID0gYXdhaXQgdGhpcy4kaHR0cC5nZXQoJy91c2VyL2FsbCcsIHsKICAgICAgICBwYXJhbXM6IHRoaXMucXVlcnlJbmZvCiAgICAgIH0pCiAgICAgIGlmIChyZXMuY29kZSAhPT0gMjAwKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuJG1lc3NhZ2UuZXJyb3IoJ+iOt+WPlueUqOaIt+WIl+ihqOWksei0pe+8gScpCiAgICAgIH0KICAgICAgdGhpcy51c2VyTGlzdCA9IHJlcy5kYXRhLnVzZXJzCiAgICB0aGlzLnRvdGFsPXJlcy5kYXRhLnRvdGFsCiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["User.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"User.vue","sourceRoot":"src/components/user","sourcesContent":["<template>\n  <div>\n    <!-- 面包屑导航区域-->\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\n      <el-breadcrumb-item>用户管理</el-breadcrumb-item>\n      <el-breadcrumb-item>用户列表</el-breadcrumb-item>\n    </el-breadcrumb>\n    <!-- 卡片视图区域-->\n    <el-card>\n      <!-- 搜索与添加区域-->\n      <el-row :gutter=\"20\">\n        <el-col :span=\"7\">\n          <el-input placeholder=\"请输入内容\">\n            <el-button slot=\"append\" icon=\"el-icon-search\"></el-button>\n          </el-input>\n        </el-col>\n        <el-col :span=\"4\">\n          <el-button type=\"primary\">添加用户</el-button>\n        </el-col>\n      </el-row>\n    </el-card>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      // 获取用户列表的参数对象\n      queryInfo: {\n        query: '',\n        pagenum: 1,\n        pagesize: 2\n      },\n      userList: [],\n      total: 0\n    }\n  },\n  cerated() {\n    this.getUserList()\n  },\n  methods: {\n    async getUserList() {\n      const { data: res } = await this.$http.get('/user/all', {\n        params: this.queryInfo\n      })\n      if (res.code !== 200) {\n        return this.$message.error('获取用户列表失败！')\n      }\n      this.userList = res.data.users\n    this.total=res.data.total\n    }\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n</style>\n"]}]}