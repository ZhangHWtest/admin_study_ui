{"remainingRequest":"/Users/zhwtest/Desktop/VueProjects/admin_study_ui/node_modules/babel-loader/lib/index.js!/Users/zhwtest/Desktop/VueProjects/admin_study_ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/zhwtest/Desktop/VueProjects/admin_study_ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhwtest/Desktop/VueProjects/admin_study_ui/src/components/user/User.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zhwtest/Desktop/VueProjects/admin_study_ui/src/components/user/User.vue","mtime":1582538746192},{"path":"/Users/zhwtest/Desktop/VueProjects/admin_study_ui/node_modules/cache-loader/dist/cjs.js","mtime":1577353208002},{"path":"/Users/zhwtest/Desktop/VueProjects/admin_study_ui/node_modules/babel-loader/lib/index.js","mtime":1577353208223},{"path":"/Users/zhwtest/Desktop/VueProjects/admin_study_ui/node_modules/cache-loader/dist/cjs.js","mtime":1577353208002},{"path":"/Users/zhwtest/Desktop/VueProjects/admin_study_ui/node_modules/vue-loader/lib/index.js","mtime":1577353211955}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["User.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <!-- 面包屑导航区域-->\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\n      <el-breadcrumb-item>用户管理</el-breadcrumb-item>\n      <el-breadcrumb-item>用户列表</el-breadcrumb-item>\n    </el-breadcrumb>\n    <!-- 卡片视图区域-->\n    <el-card>\n      <!-- 搜索与添加区域-->\n      <el-row :gutter=\"30\">\n        <el-col :span=\"5\">\n          <el-input\n            v-model=\"queryInfo.mes\"\n            placeholder=\"姓名/昵称/电话/邮箱\"\n            clearable\n            @clear=\"getUserList\"\n          ></el-input>\n        </el-col>\n        <el-col :span=\"5\">\n          <el-select v-model=\"queryInfo.status\" placeholder=\"状态\">\n            <el-option\n              v-for=\"item in options\"\n              :key=\"item.value\"\n              :label=\"item.label\"\n              :value=\"item.value\"\n            ></el-option>\n          </el-select>\n        </el-col>\n        <el-col :span=\"5\">\n          <el-date-picker\n            v-model=\"timeValue\"\n            type=\"datetimerange\"\n            align=\"right\"\n            start-placeholder=\"创建开始日期\"\n            end-placeholder=\"创建结束日期\"\n            value-format=\"yyyy-MM-dd HH:mm:ss\"\n            :default-time=\"['00:00:00', '24:00:00']\"\n          ></el-date-picker>\n        </el-col>\n      </el-row>\n      <el-row>\n        <el-col :span=\"6\">\n          <el-button type=\"primary\" plain @click=\"getUserList\">搜索</el-button>\n          <el-button plain @click=\"exportData\">导出</el-button>\n          <el-button type=\"primary\" @click=\"addDialogVisible = true\"\n            >添加用户</el-button\n          >\n        </el-col>\n      </el-row>\n      <!-- 用户列表区域-->\n      <el-table border :data=\"userList\">\n        <template v-for=\"(item, index) in tableHead\">\n          <el-table-column\n            v-if=\"item.column_name\"\n            :key=\"index\"\n            :prop=\"item.column_name\"\n            :label=\"item.column_comment\"\n          ></el-table-column>\n        </template>\n        <el-table-column label=\"状态\" width=\"50px\">\n          <template slot-scope=\"scope\">\n            <p v-if=\"scope.row.status === 1\">启用</p>\n            <p v-else-if=\"scope.row.status === 0\">禁用</p>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"操作\" width=\"120px\">\n          <template slot-scope=\"scope\">\n            <!-- 修改按钮 -->\n            <el-button\n              type=\"primary\"\n              icon=\"el-icon-edit\"\n              size=\"mini\"\n              @click=\"showEditDialog(scope.row.id)\"\n            ></el-button>\n            <!-- 删除按钮 -->\n            <el-button\n              type=\"danger\"\n              icon=\"el-icon-delete\"\n              size=\"mini\"\n              @click=\"removeUserById(scope.row.id)\"\n            ></el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n      <!-- 分页-->\n      <el-pagination\n        :current-page=\"queryInfo.pagenum\"\n        :page-sizes=\"[10, 20, 50, 100]\"\n        :page-size=\"queryInfo.pagesize\"\n        layout=\"total, sizes, prev, pager, next, jumper\"\n        :total=\"total\"\n        @size-change=\"handleSizeChange\"\n        @current-change=\"handleCurrentChange\"\n      ></el-pagination>\n    </el-card>\n    <!-- 添加用户对话框-->\n    <el-dialog\n      title=\"添加用户\"\n      :visible.sync=\"addDialogVisible\"\n      width=\"50%\"\n      @close=\"addDialogClosed\"\n    >\n      <!-- 内容主体区域-->\n      <el-form\n        ref=\"addFormRef\"\n        :model=\"createUser\"\n        :rules=\"addRulesForm\"\n        label-width=\"70px\"\n      >\n        <el-form-item label=\"用户名\" prop=\"name\">\n          <el-input v-model=\"createUser.name\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"密码\" prop=\"password\">\n          <el-input v-model=\"createUser.password\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"昵称\" prop=\"nickName\">\n          <el-input v-model=\"createUser.nickName\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"电话\" prop=\"mobile\">\n          <el-input v-model=\"createUser.mobile\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"邮箱\" prop=\"email\">\n          <el-input v-model=\"createUser.email\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"状态\" prop=\"status\">\n          <template>\n            <el-radio v-model=\"createUser.status\" label=\"0\">禁用</el-radio>\n            <el-radio v-model=\"createUser.status\" label=\"1\">启用</el-radio>\n          </template>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"addDialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"addUser\">确 定</el-button>\n      </span>\n    </el-dialog>\n    <!-- 修改用户的对话框-->\n    <el-dialog\n      title=\"修改用戶\"\n      :visible.sync=\"editDialogVisible\"\n      width=\"50%\"\n      @close=\"editDialogClosed\"\n    >\n      <el-form\n        ref=\"editFormRef\"\n        :model=\"editForm\"\n        :rules=\"addRulesForm\"\n        label-width=\"70px\"\n      >\n        <el-form-item label=\"用户名\" prop=\"name\">\n          <el-input v-model=\"editForm.name\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"昵称\" prop=\"nickName\">\n          <el-input v-model=\"editForm.nickName\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"电话\" prop=\"mobile\">\n          <el-input v-model=\"editForm.mobile\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"邮箱\" prop=\"email\">\n          <el-input v-model=\"editForm.email\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"状态\" prop=\"status\">\n          <template>\n            <el-radio v-model=\"editForm.status\" label=\"0\">禁用</el-radio>\n            <el-radio v-model=\"editForm.status\" label=\"1\">启用</el-radio>\n          </template>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"editDialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"editUserInfo\">确 定</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    // 验证邮箱的自定义规则\n    var checkEmail = (rule, value, cb) => {\n      const regEmail = /^[A-Za-z0-9\\u4e00-\\u9fa5]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$/\n      if (regEmail.test(value)) {\n        return cb()\n      }\n      cb(new Error('请输入合法的邮箱！'))\n    }\n    // 验证手机号的自定义规则˝\n    var checkMobile = (rule, value, cb) => {\n      const regMobile = /^1[3456789]\\d{9}$/\n      if (regMobile.test(value)) {\n        return cb()\n      }\n      cb(new Error('请输入正确的手机号！'))\n    }\n    return {\n      timeValue: '',\n      // 获取用户列表的参数对象\n      queryInfo: {\n        mes: '',\n        status: '',\n        startTime: '',\n        endTime: '',\n        pageNum: 1,\n        pageSize: 10\n      },\n      total: 0,\n      tableHead: [\n        { column_name: 'id', column_comment: 'ID' },\n        { column_name: 'name', column_comment: '姓名' },\n        { column_name: 'nickName', column_comment: '昵称' },\n        { column_name: 'mobile', column_comment: '电话' },\n        { column_name: 'email', column_comment: '邮箱' },\n        { column_name: 'createTime', column_comment: '创建时间' },\n        { column_name: 'updateTime', column_comment: '修改时间' },\n        { column_name: 'lastUpdateBy', column_comment: '最后修改人' }\n      ],\n      userList: [],\n      // 控制添加用户对话框的显示隐藏\n      addDialogVisible: false,\n      // 添加用户的表单数据\n      createUser: {\n        name: [],\n        password: [],\n        nickName: [],\n        mobile: [],\n        email: [],\n        status: '0'\n      },\n      // 添加用户表单的校验对象\n      addRulesForm: {\n        name: [{ required: true, message: '请输入用户名', trigger: 'blur' }],\n        password: [{ required: true, message: '请输入密码', trigger: 'blur' }],\n        nickName: [{ required: true, message: '请输入昵称', trigger: 'blur' }],\n        mobile: [\n          { required: true, message: '请输入电话', trigger: 'blur' },\n          { validator: checkMobile, trigger: 'blur' }\n        ],\n        email: [\n          { required: true, message: '请输入邮箱', trigger: 'blur' },\n          { validator: checkEmail, trigger: 'blur' }\n        ],\n        status: [{ required: true, message: '请选择状态', trigger: 'blur' }]\n      },\n      // 控制修改用户对话框的显示与隐藏\n      editDialogVisible: false,\n      editForm: {\n        // 获取当前登录用户。作为修改人\n        lastUpdateBy: []\n      },\n      options: [\n        {\n          value: '0',\n          label: '启用'\n        },\n        {\n          value: '1',\n          label: '禁用'\n        }\n      ]\n    }\n  },\n  created() {\n    this.getUserList()\n  },\n  methods: {\n    async getUserList() {\n      // const { data: userRes } = await this.$http.get('/user/find', {\n      //   params: this.queryInfo\n      // })\n      this.queryInfo.startTime = this.timeValue[0]\n      this.queryInfo.endTime = this.timeValue[1]\n      const { data: userRes } = await this.$api.user.findPage(this.queryInfo)\n      if (userRes.code !== 200) {\n        return this.$message.error('获取用户列表失败！')\n      }\n      this.userList = userRes.data.users\n      this.total = userRes.data.total\n    },\n    // 监听pagesize改变的事件\n    handleSizeChange(newSize) {\n      this.queryInfo.pageSize = newSize\n      this.getUserList()\n    },\n    // 监听 页码值改变的事件\n    handleCurrentChange(newPage) {\n      this.queryInfo.pageNum = newPage\n      this.getUserList()\n    },\n    // 监听添加用户对话框关闭事件\n    addDialogClosed() {\n      this.$refs.addFormRef.resetFields()\n    },\n    // 点击”确认“提交前的预校验\n    addUser() {\n      this.$refs.addFormRef.validate(async valid => {\n        if (!valid) return\n        // 校验通过可以发起添加请求了\n        // const { data: res } = await this.$http.post(\n        //   '/user/create',\n        //   this.createUser\n        // )\n        const { data: res } = await this.$api.user.create(this.createUser)\n        if (res.code !== 200) {\n          this.$message.error('添加用户失败！')\n        }\n        this.$message.success('添加用户成功！')\n        // 添加成功关闭对话框\n        this.addDialogVisible = false\n        // 重新获取列表数据\n        this.getUserList()\n      })\n    },\n    // 展示编辑用户的对话框\n    async showEditDialog(id) {\n      // const { data: res } = await this.$http.get('/user/getuserbyid/' + id)\n      const { data: res } = await this.$api.user.getuserbyid(id)\n      if (res.code !== 200) {\n        return this.$message.error('查询用户信息失败！')\n      }\n\n      this.editForm = res.data\n      this.editDialogVisible = true\n    },\n    editDialogClosed() {\n      this.$refs.editFormRef.resetFields()\n    },\n    // 修改用户信息并提交\n    editUserInfo() {\n      this.editForm.lastUpdateBy = window.sessionStorage.getItem('token')\n      this.$refs.editFormRef.validate(async valid => {\n        if (!valid) return\n        // 发起用户请求\n        // const { data: res } = await this.$http.post(\n        //   '/user/update',\n        //   this.editForm\n        // )\n        const { data: res } = await this.$api.user.update(this.editForm)\n        if (res.code !== 200) {\n          return this.$message.error('修改用户信息失败！')\n        }\n        // 关闭对框\n        this.editDialogVisible = false\n        // 刷新数据\n        this.getUserList()\n        // 提示信息\n        this.$message.success('更新成功！')\n      })\n    },\n    // 根据id删除\n    async removeUserById(id) {\n      // 弹窗询问是否删除\n      const confirmResult = await this.$confirm(\n        '此操作将永久删除该用户, 是否继续?',\n        '提示',\n        {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }\n      ).catch(err => err)\n      if (confirmResult !== 'confirm') {\n        return this.$message.info('已取消删除！')\n      }\n      // const { data: res } = await this.$http.delete('/user/deleteuser/' + id)\n      const { data: res } = await this.$api.user.deleteuser(id)\n      if (res.code !== 200) {\n        return this.$message.error('删除用户信息失败！')\n      }\n      // 提示信息\n      this.$message.success('删除成功！')\n      // 刷新数据\n      this.getUserList()\n    },\n    // 导出数据\n    exportData() {\n      require.ensure([], () => {\n        // 标红是没有驼峰命名\n        // const { export_json_to_excel } = require('@/vendor/Export2Excel')\n        const { exportJsonToExcel } = require('../../vendor/Export2Excel')\n        // 要输出的表头\n        const tHeader = [\n          'id',\n          '姓名',\n          '昵称',\n          '电话',\n          '邮箱',\n          '创建时间',\n          '修改时间',\n          '最后修改人'\n        ]\n        // 表头对应的内容, 会从下行定义的 list 里去找相应的数据\n        const filterVal = [\n          'id',\n          'name',\n          'nickName',\n          'mobile',\n          'email',\n          'createTime',\n          'updateTime',\n          'lastUpdateBy'\n        ]\n        // 数据来源\n        const list = this.userList\n        const data = this.formatJson(filterVal, list)\n        // fileName: 要导出的表格名称\n        exportJsonToExcel(tHeader, data, 'users' + this.time)\n      })\n    },\n    formatJson(filterVal, jsonData) {\n      return jsonData.map(v => filterVal.map(j => v[j]))\n    }\n  }\n}\n</script>\n\n<style lang=\"less\" scoped></style>\n"],"sourceRoot":"src/components/user"}]}