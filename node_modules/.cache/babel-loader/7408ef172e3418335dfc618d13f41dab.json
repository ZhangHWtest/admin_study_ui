{"remainingRequest":"/Users/zhwtest/Desktop/VueProjects/admin_study_ui/node_modules/babel-loader/lib/index.js!/Users/zhwtest/Desktop/VueProjects/admin_study_ui/node_modules/eslint-loader/index.js??ref--13-0!/Users/zhwtest/Desktop/VueProjects/admin_study_ui/src/vendor/Blob.js","dependencies":[{"path":"/Users/zhwtest/Desktop/VueProjects/admin_study_ui/src/vendor/Blob.js","mtime":1582519965606},{"path":"/Users/zhwtest/Desktop/VueProjects/admin_study_ui/node_modules/raw-loader/index.js","mtime":1582519207907},{"path":"/Users/zhwtest/Desktop/VueProjects/admin_study_ui/node_modules/cache-loader/dist/cjs.js","mtime":1577353208002},{"path":"/Users/zhwtest/Desktop/VueProjects/admin_study_ui/node_modules/babel-loader/lib/index.js","mtime":1577353208223},{"path":"/Users/zhwtest/Desktop/VueProjects/admin_study_ui/node_modules/eslint-loader/index.js","mtime":1577353210651}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/zhwtest/Desktop/VueProjects/admin_study_ui/src/vendor/Blob.js"],"names":["global","window","self","BlobBuilder","WebKitBlobBuilder","MSBlobBuilder","MozBlobBuilder","URL","webkitURL","href","a","document","createElement","origBlob","Blob","createObjectURL","revokeObjectURL","strTag","Symbol","toStringTag","blobSupported","blobSupportsArrayBufferView","arrayBufferSupported","ArrayBuffer","blobBuilderSupported","prototype","append","getBlob","size","Uint8Array","e","mapArrayBufferViews","ary","map","chunk","buffer","buf","byteLength","copy","set","byteOffset","BlobBuilderConstructor","options","bb","forEach","part","type","BlobConstructor","stringEncode","string","pos","len","length","out","Arr","Array","at","tlen","Math","max","target","value","charCodeAt","extra","update","slice","stringDecode","end","res","i","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","push","str","String","fromCharCode","apply","textEncode","TextEncoder","encode","bind","textDecode","TextDecoder","decode","FakeBlobBuilder","isDataView","obj","DataView","isPrototypeOf","bufferClone","view","array","array2base64","input","byteToCharMap","output","byte1","haveByte2","byte2","haveByte3","byte3","outByte1","outByte2","outByte3","outByte4","join","create","Object","c","viewClasses","isArrayBufferView","isView","indexOf","toString","call","concatTypedarrays","chunks","b","offset","l","opts","_buffer","concat","test","toLowerCase","arrayBuffer","Promise","resolve","text","start","File","name","replace","lastModifiedDate","lastModified","Date","constructor","setPrototypeOf","__proto__","FileReader","TypeError","delegate","createDocumentFragment","addEventListener","dispatchEvent","evt","local","removeEventListener","_read","fr","blob","kind","result","setTimeout","readyState","LOADING","Event","EMPTY","DONE","error","onabort","onerror","onload","onloadend","onloadstart","onprogress","readAsDataURL","readAsText","readAsArrayBuffer","abort","url","_send","XMLHttpRequest","send","data","setRequestHeader","fixFileAndXHR","isIE","ActiveXObject","documentElement","style","klass","Function","d","t","stream","promisify","reject","Error","ReadableStream","position","autoAllocateChunkSize","pull","controller","v","byobRequest","then","uint8array","bytesRead","respond","close","enqueue","Response","body","getReader","read"],"mappings":"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","sourcesContent":["(function() {\n  var global =\n    typeof window === 'object' ? window : typeof self === 'object' ? self : this\n\n  var BlobBuilder =\n    global.BlobBuilder ||\n    global.WebKitBlobBuilder ||\n    global.MSBlobBuilder ||\n    global.MozBlobBuilder\n\n  global.URL =\n    global.URL ||\n    global.webkitURL ||\n    function(href, a) {\n      a = document.createElement('a')\n      a.href = href\n      return a\n    }\n\n  var origBlob = global.Blob\n  var createObjectURL = URL.createObjectURL\n  var revokeObjectURL = URL.revokeObjectURL\n  var strTag = global.Symbol && global.Symbol.toStringTag\n  var blobSupported = false\n  var blobSupportsArrayBufferView = false\n  var arrayBufferSupported = !!global.ArrayBuffer\n  var blobBuilderSupported =\n    BlobBuilder && BlobBuilder.prototype.append && BlobBuilder.prototype.getBlob\n\n  try {\n    // Check if Blob constructor is supported\n    blobSupported = new Blob(['ä']).size === 2\n\n    // Check if Blob constructor supports ArrayBufferViews\n    // Fails in Safari 6, so we need to map to ArrayBuffers there.\n    blobSupportsArrayBufferView = new Blob([new Uint8Array([1, 2])]).size === 2\n  } catch (e) {}\n\n  /**\n   * Helper function that maps ArrayBufferViews to ArrayBuffers\n   * Used by BlobBuilder constructor and old browsers that didn't\n   * support it in the Blob constructor.\n   */\n  function mapArrayBufferViews(ary) {\n    return ary.map(function(chunk) {\n      if (chunk.buffer instanceof ArrayBuffer) {\n        var buf = chunk.buffer\n\n        // if this is a subarray, make a copy so we only\n        // include the subarray region from the underlying buffer\n        if (chunk.byteLength !== buf.byteLength) {\n          var copy = new Uint8Array(chunk.byteLength)\n          copy.set(new Uint8Array(buf, chunk.byteOffset, chunk.byteLength))\n          buf = copy.buffer\n        }\n\n        return buf\n      }\n\n      return chunk\n    })\n  }\n\n  function BlobBuilderConstructor(ary, options) {\n    options = options || {}\n\n    var bb = new BlobBuilder()\n    mapArrayBufferViews(ary).forEach(function(part) {\n      bb.append(part)\n    })\n\n    return options.type ? bb.getBlob(options.type) : bb.getBlob()\n  }\n\n  function BlobConstructor(ary, options) {\n    return new origBlob(mapArrayBufferViews(ary), options || {})\n  }\n\n  if (global.Blob) {\n    BlobBuilderConstructor.prototype = Blob.prototype\n    BlobConstructor.prototype = Blob.prototype\n  }\n\n  /********************************************************/\n  /*               String Encoder fallback                */\n  /********************************************************/\n  function stringEncode(string) {\n    var pos = 0\n    var len = string.length\n    var out = []\n    var Arr = global.Uint8Array || Array // Use byte array when possible\n\n    var at = 0 // output position\n    var tlen = Math.max(32, len + (len >> 1) + 7) // 1.5x size\n    var target = new Arr((tlen >> 3) << 3) // ... but at 8 byte offset\n\n    while (pos < len) {\n      var value = string.charCodeAt(pos++)\n      if (value >= 0xd800 && value <= 0xdbff) {\n        // high surrogate\n        if (pos < len) {\n          var extra = string.charCodeAt(pos)\n          if ((extra & 0xfc00) === 0xdc00) {\n            ++pos\n            value = ((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000\n          }\n        }\n        if (value >= 0xd800 && value <= 0xdbff) {\n          continue // drop lone surrogate\n        }\n      }\n\n      // expand the buffer if we couldn't write 4 bytes\n      if (at + 4 > target.length) {\n        tlen += 8 // minimum extra\n        tlen *= 1.0 + (pos / string.length) * 2 // take 2x the remaining\n        tlen = (tlen >> 3) << 3 // 8 byte offset\n\n        const update = new Uint8Array(tlen)\n        update.set(target)\n        target = update\n      }\n\n      if ((value & 0xffffff80) === 0) {\n        // 1-byte\n        target[at++] = value // ASCII\n        continue\n      } else if ((value & 0xfffff800) === 0) {\n        // 2-byte\n        target[at++] = ((value >> 6) & 0x1f) | 0xc0\n      } else if ((value & 0xffff0000) === 0) {\n        // 3-byte\n        target[at++] = ((value >> 12) & 0x0f) | 0xe0\n        target[at++] = ((value >> 6) & 0x3f) | 0x80\n      } else if ((value & 0xffe00000) === 0) {\n        // 4-byte\n        target[at++] = ((value >> 18) & 0x07) | 0xf0\n        target[at++] = ((value >> 12) & 0x3f) | 0x80\n        target[at++] = ((value >> 6) & 0x3f) | 0x80\n      } else {\n        // FIXME: do we care\n        continue\n      }\n\n      target[at++] = (value & 0x3f) | 0x80\n    }\n\n    return target.slice(0, at)\n  }\n\n  /********************************************************/\n  /*               String Decoder fallback                */\n  /********************************************************/\n  function stringDecode(buf) {\n    var end = buf.length\n    var res = []\n\n    var i = 0\n    while (i < end) {\n      var firstByte = buf[i]\n      var codePoint = null\n      var bytesPerSequence =\n        firstByte > 0xef ? 4 : firstByte > 0xdf ? 3 : firstByte > 0xbf ? 2 : 1\n\n      if (i + bytesPerSequence <= end) {\n        var secondByte, thirdByte, fourthByte, tempCodePoint\n\n        switch (bytesPerSequence) {\n          case 1:\n            if (firstByte < 0x80) {\n              codePoint = firstByte\n            }\n            break\n          case 2:\n            secondByte = buf[i + 1]\n            if ((secondByte & 0xc0) === 0x80) {\n              tempCodePoint = ((firstByte & 0x1f) << 0x6) | (secondByte & 0x3f)\n              if (tempCodePoint > 0x7f) {\n                codePoint = tempCodePoint\n              }\n            }\n            break\n          case 3:\n            secondByte = buf[i + 1]\n            thirdByte = buf[i + 2]\n            if ((secondByte & 0xc0) === 0x80 && (thirdByte & 0xc0) === 0x80) {\n              tempCodePoint =\n                ((firstByte & 0xf) << 0xc) |\n                ((secondByte & 0x3f) << 0x6) |\n                (thirdByte & 0x3f)\n              if (\n                tempCodePoint > 0x7ff &&\n                (tempCodePoint < 0xd800 || tempCodePoint > 0xdfff)\n              ) {\n                codePoint = tempCodePoint\n              }\n            }\n            break\n          case 4:\n            secondByte = buf[i + 1]\n            thirdByte = buf[i + 2]\n            fourthByte = buf[i + 3]\n            if (\n              (secondByte & 0xc0) === 0x80 &&\n              (thirdByte & 0xc0) === 0x80 &&\n              (fourthByte & 0xc0) === 0x80\n            ) {\n              tempCodePoint =\n                ((firstByte & 0xf) << 0x12) |\n                ((secondByte & 0x3f) << 0xc) |\n                ((thirdByte & 0x3f) << 0x6) |\n                (fourthByte & 0x3f)\n              if (tempCodePoint > 0xffff && tempCodePoint < 0x110000) {\n                codePoint = tempCodePoint\n              }\n            }\n        }\n      }\n\n      if (codePoint === null) {\n        // we did not generate a valid codePoint so insert a\n        // replacement char (U+FFFD) and advance only 1 byte\n        codePoint = 0xfffd\n        bytesPerSequence = 1\n      } else if (codePoint > 0xffff) {\n        // encode to utf16 (surrogate pair dance)\n        codePoint -= 0x10000\n        res.push(((codePoint >>> 10) & 0x3ff) | 0xd800)\n        codePoint = 0xdc00 | (codePoint & 0x3ff)\n      }\n\n      res.push(codePoint)\n      i += bytesPerSequence\n    }\n\n    var len = res.length\n    var str = ''\n    var i = 0\n\n    while (i < len) {\n      str += String.fromCharCode.apply(String, res.slice(i, (i += 0x1000)))\n    }\n\n    return str\n  }\n\n  // string -> buffer\n  var textEncode =\n    typeof TextEncoder === 'function'\n      ? TextEncoder.prototype.encode.bind(new TextEncoder())\n      : stringEncode\n\n  // buffer -> string\n  var textDecode =\n    typeof TextDecoder === 'function'\n      ? TextDecoder.prototype.decode.bind(new TextDecoder())\n      : stringDecode\n\n  function FakeBlobBuilder() {\n    function isDataView(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n    function bufferClone(buf) {\n      var view = new Array(buf.byteLength)\n      var array = new Uint8Array(buf)\n      var i = view.length\n      while (i--) {\n        view[i] = array[i]\n      }\n      return view\n    }\n    function array2base64(input) {\n      var byteToCharMap =\n        'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='\n\n      var output = []\n\n      for (var i = 0; i < input.length; i += 3) {\n        var byte1 = input[i]\n        var haveByte2 = i + 1 < input.length\n        var byte2 = haveByte2 ? input[i + 1] : 0\n        var haveByte3 = i + 2 < input.length\n        var byte3 = haveByte3 ? input[i + 2] : 0\n\n        var outByte1 = byte1 >> 2\n        var outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4)\n        var outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6)\n        var outByte4 = byte3 & 0x3f\n\n        if (!haveByte3) {\n          outByte4 = 64\n\n          if (!haveByte2) {\n            outByte3 = 64\n          }\n        }\n\n        output.push(\n          byteToCharMap[outByte1],\n          byteToCharMap[outByte2],\n          byteToCharMap[outByte3],\n          byteToCharMap[outByte4]\n        )\n      }\n\n      return output.join('')\n    }\n\n    var create =\n      Object.create ||\n      function(a) {\n        function c() {}\n        c.prototype = a\n        return new c()\n      }\n\n    if (arrayBufferSupported) {\n      var viewClasses = [\n        '[object Int8Array]',\n        '[object Uint8Array]',\n        '[object Uint8ClampedArray]',\n        '[object Int16Array]',\n        '[object Uint16Array]',\n        '[object Int32Array]',\n        '[object Uint32Array]',\n        '[object Float32Array]',\n        '[object Float64Array]'\n      ]\n\n      var isArrayBufferView =\n        ArrayBuffer.isView ||\n        function(obj) {\n          return (\n            obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n          )\n        }\n    }\n\n    function concatTypedarrays(chunks) {\n      var size = 0\n      var i = chunks.length\n      while (i--) {\n        size += chunks[i].length\n      }\n      var b = new Uint8Array(size)\n      var offset = 0\n      for (i = 0, l = chunks.length; i < l; i++) {\n        var chunk = chunks[i]\n        b.set(chunk, offset)\n        offset += chunk.byteLength || chunk.length\n      }\n\n      return b\n    }\n\n    /********************************************************/\n    /*                   Blob constructor                   */\n    /********************************************************/\n    function Blob(chunks, opts) {\n      chunks = chunks || []\n      opts = opts == null ? {} : opts\n      for (var i = 0, len = chunks.length; i < len; i++) {\n        var chunk = chunks[i]\n        if (chunk instanceof Blob) {\n          chunks[i] = chunk._buffer\n        } else if (typeof chunk === 'string') {\n          chunks[i] = textEncode(chunk)\n        } else if (\n          arrayBufferSupported &&\n          (ArrayBuffer.prototype.isPrototypeOf(chunk) ||\n            isArrayBufferView(chunk))\n        ) {\n          chunks[i] = bufferClone(chunk)\n        } else if (arrayBufferSupported && isDataView(chunk)) {\n          chunks[i] = bufferClone(chunk.buffer)\n        } else {\n          chunks[i] = textEncode(String(chunk))\n        }\n      }\n\n      this._buffer = global.Uint8Array\n        ? concatTypedarrays(chunks)\n        : [].concat.apply([], chunks)\n      this.size = this._buffer.length\n\n      this.type = opts.type || ''\n      if (/[^\\u0020-\\u007E]/.test(this.type)) {\n        this.type = ''\n      } else {\n        this.type = this.type.toLowerCase()\n      }\n    }\n\n    Blob.prototype.arrayBuffer = function() {\n      return Promise.resolve(this._buffer)\n    }\n\n    Blob.prototype.text = function() {\n      return Promise.resolve(textDecode(this._buffer))\n    }\n\n    Blob.prototype.slice = function(start, end, type) {\n      var slice = this._buffer.slice(start || 0, end || this._buffer.length)\n      return new Blob([slice], { type: type })\n    }\n\n    Blob.prototype.toString = function() {\n      return '[object Blob]'\n    }\n\n    /********************************************************/\n    /*                   File constructor                   */\n    /********************************************************/\n    function File(chunks, name, opts) {\n      opts = opts || {}\n      var a = Blob.call(this, chunks, opts) || this\n      a.name = name.replace(/\\//g, ':')\n      a.lastModifiedDate = opts.lastModified\n        ? new Date(opts.lastModified)\n        : new Date()\n      a.lastModified = +a.lastModifiedDate\n\n      return a\n    }\n\n    File.prototype = create(Blob.prototype)\n    File.prototype.constructor = File\n\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(File, Blob)\n    } else {\n      try {\n        File.__proto__ = Blob\n      } catch (e) {}\n    }\n\n    File.prototype.toString = function() {\n      return '[object File]'\n    }\n\n    /********************************************************/\n    /*                FileReader constructor                */\n    /********************************************************/\n    function FileReader() {\n      if (!(this instanceof FileReader)) {\n        throw new TypeError(\n          \"Failed to construct 'FileReader': Please use the 'new' operator, this DOM object constructor cannot be called as a function.\"\n        )\n      }\n\n      var delegate = document.createDocumentFragment()\n      this.addEventListener = delegate.addEventListener\n      this.dispatchEvent = function(evt) {\n        var local = this['on' + evt.type]\n        if (typeof local === 'function') local(evt)\n        delegate.dispatchEvent(evt)\n      }\n      this.removeEventListener = delegate.removeEventListener\n    }\n\n    function _read(fr, blob, kind) {\n      if (!(blob instanceof Blob)) {\n        throw new TypeError(\n          \"Failed to execute '\" +\n            kind +\n            \"' on 'FileReader': parameter 1 is not of type 'Blob'.\"\n        )\n      }\n\n      fr.result = ''\n\n      setTimeout(function() {\n        this.readyState = FileReader.LOADING\n        fr.dispatchEvent(new Event('load'))\n        fr.dispatchEvent(new Event('loadend'))\n      })\n    }\n\n    FileReader.EMPTY = 0\n    FileReader.LOADING = 1\n    FileReader.DONE = 2\n    FileReader.prototype.error = null\n    FileReader.prototype.onabort = null\n    FileReader.prototype.onerror = null\n    FileReader.prototype.onload = null\n    FileReader.prototype.onloadend = null\n    FileReader.prototype.onloadstart = null\n    FileReader.prototype.onprogress = null\n\n    FileReader.prototype.readAsDataURL = function(blob) {\n      _read(this, blob, 'readAsDataURL')\n      this.result =\n        'data:' + blob.type + ';base64,' + array2base64(blob._buffer)\n    }\n\n    FileReader.prototype.readAsText = function(blob) {\n      _read(this, blob, 'readAsText')\n      this.result = textDecode(blob._buffer)\n    }\n\n    FileReader.prototype.readAsArrayBuffer = function(blob) {\n      _read(this, blob, 'readAsText')\n      // return ArrayBuffer when possible\n      this.result = (blob._buffer.buffer || blob._buffer).slice()\n    }\n\n    FileReader.prototype.abort = function() {}\n\n    /********************************************************/\n    /*                         URL                          */\n    /********************************************************/\n    URL.createObjectURL = function(blob) {\n      return blob instanceof Blob\n        ? 'data:' + blob.type + ';base64,' + array2base64(blob._buffer)\n        : createObjectURL.call(URL, blob)\n    }\n\n    URL.revokeObjectURL = function(url) {\n      revokeObjectURL && revokeObjectURL.call(URL, url)\n    }\n\n    /********************************************************/\n    /*                         XHR                          */\n    /********************************************************/\n    var _send = global.XMLHttpRequest && global.XMLHttpRequest.prototype.send\n    if (_send) {\n      XMLHttpRequest.prototype.send = function(data) {\n        if (data instanceof Blob) {\n          this.setRequestHeader('Content-Type', data.type)\n          _send.call(this, textDecode(data._buffer))\n        } else {\n          _send.call(this, data)\n        }\n      }\n    }\n\n    global.FileReader = FileReader\n    global.File = File\n    global.Blob = Blob\n  }\n\n  function fixFileAndXHR() {\n    var isIE =\n      !!global.ActiveXObject ||\n      ('-ms-scroll-limit' in document.documentElement.style &&\n        '-ms-ime-align' in document.documentElement.style)\n\n    // Monkey patched\n    // IE don't set Content-Type header on XHR whose body is a typed Blob\n    // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/6047383\n    var _send = global.XMLHttpRequest && global.XMLHttpRequest.prototype.send\n    if (isIE && _send) {\n      XMLHttpRequest.prototype.send = function(data) {\n        if (data instanceof Blob) {\n          this.setRequestHeader('Content-Type', data.type)\n          _send.call(this, data)\n        } else {\n          _send.call(this, data)\n        }\n      }\n    }\n\n    try {\n      new File([], '')\n    } catch (e) {\n      try {\n        var klass = new Function(\n          'class File extends Blob {' +\n            'constructor(chunks, name, opts) {' +\n            'opts = opts || {};' +\n            'super(chunks, opts || {});' +\n            'this.name = name.replace(///g, \":\");' +\n            'this.lastModifiedDate = opts.lastModified ? new Date(opts.lastModified) : new Date();' +\n            'this.lastModified = +this.lastModifiedDate;' +\n            '}};' +\n            'return new File([], \"\"), File'\n        )()\n        global.File = klass\n      } catch (e) {\n        var klass = function(b, d, c) {\n          var blob = new Blob(b, c)\n          var t =\n            c && void 0 !== c.lastModified\n              ? new Date(c.lastModified)\n              : new Date()\n\n          blob.name = d.replace(/\\//g, ':')\n          blob.lastModifiedDate = t\n          blob.lastModified = +t\n          blob.toString = function() {\n            return '[object File]'\n          }\n\n          if (strTag) {\n            blob[strTag] = 'File'\n          }\n\n          return blob\n        }\n        global.File = klass\n      }\n    }\n  }\n\n  if (blobSupported) {\n    fixFileAndXHR()\n    global.Blob = blobSupportsArrayBufferView ? global.Blob : BlobConstructor\n  } else if (blobBuilderSupported) {\n    fixFileAndXHR()\n    global.Blob = BlobBuilderConstructor\n  } else {\n    FakeBlobBuilder()\n  }\n\n  if (strTag) {\n    File.prototype[strTag] = 'File'\n    Blob.prototype[strTag] = 'Blob'\n    FileReader.prototype[strTag] = 'FileReader'\n  }\n\n  var blob = global.Blob.prototype\n  var stream\n\n  function promisify(obj) {\n    return new Promise(function(resolve, reject) {\n      obj.onload = obj.onerror = function(evt) {\n        obj.onload = obj.onerror = null\n\n        evt.type === 'load'\n          ? resolve(obj.result || obj)\n          : reject(new Error('Failed to read the blob/file'))\n      }\n    })\n  }\n\n  try {\n    new ReadableStream({ type: 'bytes' })\n    stream = function stream() {\n      var position = 0\n      var blob = this\n\n      return new ReadableStream({\n        type: 'bytes',\n        autoAllocateChunkSize: 524288,\n\n        pull: function(controller) {\n          var v = controller.byobRequest.view\n          var chunk = blob.slice(position, position + v.byteLength)\n          return chunk.arrayBuffer().then(function(buffer) {\n            var uint8array = new Uint8Array(buffer)\n            var bytesRead = uint8array.byteLength\n\n            position += bytesRead\n            v.set(uint8array)\n            controller.byobRequest.respond(bytesRead)\n\n            if (position >= blob.size) controller.close()\n          })\n        }\n      })\n    }\n  } catch (e) {\n    try {\n      new ReadableStream({})\n      stream = function stream(blob) {\n        var position = 0\n        var blob = this\n\n        return new ReadableStream({\n          pull: function(controller) {\n            var chunk = blob.slice(position, position + 524288)\n\n            return chunk.arrayBuffer().then(function(buffer) {\n              position += buffer.byteLength\n              var uint8array = new Uint8Array(buffer)\n              controller.enqueue(uint8array)\n\n              if (position == blob.size) controller.close()\n            })\n          }\n        })\n      }\n    } catch (e) {\n      try {\n        new Response('').body.getReader().read()\n        stream = function stream() {\n          return new Response(this).body\n        }\n      } catch (e) {\n        stream = function stream() {\n          throw new Error(\n            'Include https://github.com/MattiasBuelens/web-streams-polyfill'\n          )\n        }\n      }\n    }\n  }\n\n  if (!blob.arrayBuffer) {\n    blob.arrayBuffer = function arrayBuffer() {\n      var fr = new FileReader()\n      fr.readAsArrayBuffer(this)\n      return promisify(fr)\n    }\n  }\n\n  if (!blob.text) {\n    blob.text = function text() {\n      var fr = new FileReader()\n      fr.readAsText(this)\n      return promisify(fr)\n    }\n  }\n\n  if (!blob.stream) {\n    blob.stream = stream\n  }\n})()\n"]}]}